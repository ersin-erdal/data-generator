#!/usr/bin/env bash

red=`tput setaf 1`
green=`tput setaf 2`
yellow=`tput setaf 3`
blue=`tput setaf 4`
reset=`tput sgr0`

usage() {
  echo "Commands:"
  echo "custom_index"
  echo "metric"
  exit 1
}

task_custom_index (){
  export INDEXER="custom-index"
  npm start
}

task_metric (){
  user="elastic"
  pass="changeme"
  user_pass="${user}:${pass}"

  metricbeat_version=8.1.2
  metricbeat="metricbeat-${metricbeat_version}"
  tar_directory="${metricbeat}-darwin-x86_64"
  tar_file="${tar_directory}.tar.gz"
  tar_url="https://artifacts.elastic.co/downloads/beats/metricbeat/${tar_file}"

  elastic_host="localhost:9200"
  kibana_host="localhost:5601"
  cwd=$(pwd)
  DIR="$metricbeat"

  ######################################################################################################################
  # Check if Metricbeat has been installed. If not, download and extract
  ######################################################################################################################
  mkdir -p ~/Beats
  cd ~/Beats

  echo "${yellow}Checking Metricbeat${reset}"
  if [ ! -d "$DIR" ]; then
     echo "${blue}Downloading Metricbeat...${reset}"
     curl -L -O "$tar_url"
     tar xzvf metricbeat-8.1.2-darwin-x86_64.tar.gz
     mkdir "$DIR" && tar xzvf "$tar_file" -C "$DIR" --strip-components 1
     rm -f "$tar_file"
     rm -rf "$tar_directory"
  fi
  echo "${green}OK${reset}"

  ######################################################################################################################
  # Check if Kibana has been set for Metricbeat. If not, set it up.
  ######################################################################################################################
  echo "${yellow}Checking Kibana${reset}"
  ilm=$(curl -X GET -s -u "$user_pass" "${elastic_host}/_ilm/policy/metricbeat"  | jq ".status") # Returns "status" only for 404

  if [ "${ilm}" != "null" ]; then
    cd "$DIR"

    echo "${blue}Setting up Kibana...${reset}"
    ./metricbeat setup -E "output.elasticsearch.hosts=['${elastic_host}']" \
             -E "output.elasticsearch.username=${user}" \
             -E "output.elasticsearch.password=${pass}" \
             -E "setup.kibana.host=${kibana_host}" \
             -E "setup.kibana.username=${user}" \
             -E "setup.kibana.password=${pass}" -e
  fi
  echo "${green}OK${reset}"

  ######################################################################################################################
  # Check if Data Stream for metricbeat has been created. If not, create.
  ######################################################################################################################
  echo "${yellow}Checking Data Stream${reset}"
  data_stream_url="${elastic_host}/_data_stream/${metricbeat}"
  data_stream=$(curl -X GET -s -u "$user_pass" $data_stream_url  | jq ".status")

  if [ "${data_stream}" != "null" ]; then
    echo "${blue}Creating Data Stream...${reset}"
    curl -X PUT -s -u "$user_pass" "${elastic_host}/_data_stream/${metricbeat}" > /dev/null
  fi
  echo "${green}OK${reset}"

  ######################################################################################################################
  # Generate and push data.
  ######################################################################################################################
  echo "${green}Generating Data${reset}"
  cd "$cwd"
  export INDEXER="metric"
  export METRICBEAT_VERSION=$metricbeat_version
  npm start
}

main() {
  CMD=${1:-}
  shift || true

  if type "task_${CMD}" &> /dev/null; then
    "task_${CMD}" "$@"
  else
    usage
  fi
}

main "$@"